#!/usr/bin/env fish

source "$VG_INSTALL_DIR/functions"
set here (dirname (status --current-filename))
source "$here/functions"

function pg_arg_url
    set url (get_arg_value "$argv" '--url' '-u')
    if test -z "$url"
        set name (get_arg_value "$argv" '--name' '-n')
        if test -z "$name"
            set url (vantage env DATABASE_URL)
        else
            set url (vantage pg url "$name")
        end
    end
    echo "$url"
end

function pg_arg_name
    set name (get_arg_value "$argv" '--name' '-n')
    if test -z "$name"
        set url (get_arg_value "$argv" '--url' '-u')
        if test -z "$url"
            set url (vantage env DATABASE_URL)
        end
        set name (vantage pg name "$url")
    end
    echo "$name"
end

function pg_count
    docker ps --all | grep "postgres" | wc -l
end

function pg_name
    if test (count $argv) -eq 1
        set url (vantage env DATABASE_URL)
    else
        set url "$argv[2]"
    end
    if test -z "$url"
        return 1
    end
    set port (echo "$url"| cut -d: -f4 | cut -d/ -f1)
    set o (docker ps --all | grep postgres | grep ":$port-" | rev | cut -d ' ' -f1 | rev)
    if test -z "$o"
        return 1
    end
    echo "$o"
end

function pg_new
    set name (get_arg_value "$argv" '--name' '-n')
    if test -z "$name"
        set c (vantage pg count)
        set name "vg_pg_$c"
    end
    set database (random_string)
    set username (random_string)
    set password (random_string)
    docker run \
        --detach \
        --publish-all \
        --name "$name" \
        --label "vantage.database=$database" \
        --label "vantage.username=$username" \
        --label "vantage.password=$password" \
        postgres \
        > /dev/null ^ /dev/null
    set port (docker inspect --format='{{range $p, $conf := .NetworkSettings.Ports}}{{(index $conf 0).HostPort}}{{end}}' "$name")
    vantage pg ping --url postgresql://postgres@localhost:$port > /dev/null ^ /dev/null
    if test $status -ne 0
        return $status
    end
    exec_in "$name" "CREATE DATABASE $database;"
    exec_in "$name" "CREATE USER $username WITH PASSWORD '$password';"
    exec_in "$name" "GRANT ALL PRIVILEGES ON DATABASE $database TO $username;"
    vantage pg ping --url postgresql://$username:$password@localhost:$port/$database > /dev/null ^ /dev/null
    if test $status -ne 0
        return $status
    end
    echo postgresql://$username:$password@localhost:$port/$database
end

function pg_ping
    set url (pg_arg_url "$argv")
    if test -z "$url"
        return 1
    end
    set attempts 10
    while test $attempts -ne 0
        set attempts (math $attempts - 1)
        echo "Trying to connect..."
        docker run --rm --net=host postgres psql --dbname="$url" > /dev/null ^ /dev/null
        if test $status -eq 0
            echo "Connected!"
            return 0
        end
        sleep 1
    end
    echo "Failed to connect :("
    return 1
end

function pg_rm
    if get_arg_flag "$argv" '--all' '-a'
        docker stop (docker ps | grep postgres | rev | cut -d ' ' -f1 | rev) > /dev/null ^ /dev/null
        docker rm (docker ps --all | grep postgres | rev | cut -d ' ' -f1 | rev) > /dev/null ^ /dev/null
    else
        set name (pg_arg_name "$argv")
        docker stop "$name" > /dev/null ^ /dev/null
        docker rm "$name" > /dev/null ^ /dev/null
    end
end

function pg_url
    if test (count $argv) -eq 1
        vantage env DATABASE_URL
        return 0
    else
        set name "$argv[2]"
    end
    docker ps --all | grep postgres | grep "$name\$" > /dev/null
    if test $status -ne 0
        return 1
    end
    set database (docker inspect --format='{{index .Config.Labels "vantage.database"}}' "$name" ^ /dev/null)
    if test -z "$database"
        return 1
    end
    set username (docker inspect --format='{{index .Config.Labels "vantage.username"}}' "$name")
    set password (docker inspect --format='{{index .Config.Labels "vantage.password"}}' "$name")
    set port (docker inspect --format='{{range $p, $conf := .NetworkSettings.Ports}}{{(index $conf 0).HostPort}}{{end}}' "$name")
    echo postgresql://$username:$password@localhost:$port/$database
end

switch $argv[1]
    case 'count'
        pg_count
    case 'demo'
        exit 1
    case 'dump'
        exit 1
    case 'migrate'
        exit 1
    case 'name' # vg pg name [URL]
        pg_name $argv
    case 'new' # [--name NAME]
        pg_new $argv
    case 'ping' # vg pg ping [--name NAME] [--url URL]
        pg_ping $argv
    case 'restore'
        exit 1
    case 'rm' 'stop' # vg pg rm [--name NAME] [--url URL] [--all]
        pg_rm $argv
    case 'shell' # vg pg shell [--name NAME] [--url URL]
        set url (pg_arg_url "$argv")
        docker run \
            --interactive \
            --tty \
            --rm \
            --net=host \
            postgres psql --dbname "$url"
    case 'url' # vg pg url [NAME]
        pg_url $argv
end

exit $status
